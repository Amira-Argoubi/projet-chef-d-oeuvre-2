{"ast":null,"code":"import { GET_RESERVATION, ADD_RESERVATION, EDIT_DECISION, DELETE_RESERVATION } from \"./types\";\nimport axios from \"axios\";\n/*********************** GET Reservation********************** */\n\nexport const getReservation = user => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8000/chef-d'oeuvre/reservation/\");\n    console.log(res.data);\n    dispatch({\n      type: GET_RESERVATION,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n/*********************** ADD Reservation ********************** */\n\nexport const addReservation = payload => {\n  return {\n    type: ADD_RESERVATION,\n    payload\n  };\n};\nexport const addReservationToDB = el => {\n  console.log(el);\n  return dispatch => axios.post(\"http://localhost:8000/chef-d'oeuvre/reservation/add\", el).then(res => {\n    if (res.data.msg) {\n      alert(res.data.msg);\n    } else {\n      dispatch(addReservation(res.data), window.location.reload());\n    }\n  });\n};\n/*********************** DELETE Reservation********************** */\n\nexport const deleteReservation = payload => {\n  return {\n    type: DELETE_RESERVATION,\n    payload\n  };\n};\nexport const deleteReservationInDB = el => {\n  return dispatch => axios.delete(`http://localhost:8000/chef-d'oeuvre/reservation/delete/${el}`).then(res => dispatch(deleteReservation(res.data), window.location.reload(false)));\n};\n/*************************** EDIT Decision ****************************/\n\nexport const editDecision = payload => {\n  return {\n    type: EDIT_DECISION,\n    payload\n  };\n};\nexport const editDecisionInDB = el => {\n  return dispatch => axios.patch(`http://localhost:8000/chef-d'oeuvre/reservation/update/${el._id}`, el).then(res => dispatch(editDecision(res.data), window.location.reload()));\n};","map":{"version":3,"sources":["/home/amira/Bureau/copie-projet-chef-d-oeuvreV13/client/src/actions/reservationAction.js"],"names":["GET_RESERVATION","ADD_RESERVATION","EDIT_DECISION","DELETE_RESERVATION","axios","getReservation","user","dispatch","res","get","console","log","data","type","payload","error","addReservation","addReservationToDB","el","post","then","msg","alert","window","location","reload","deleteReservation","deleteReservationInDB","delete","editDecision","editDecisionInDB","patch","_id"],"mappings":"AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,aAHF,EAIEC,kBAJF,QAKO,SALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAChB,kDADgB,CAAlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEb,eADC;AAEPc,MAAAA,OAAO,EAAEN,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,CAbM;AAcP;;AAEA,OAAO,MAAMC,cAAc,GAAIF,OAAD,IAAa;AACzC,SAAO;AACLD,IAAAA,IAAI,EAAEZ,eADD;AAELa,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAMG,kBAAkB,GAAIC,EAAD,IAAQ;AACxCR,EAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AACA,SAAQX,QAAD,IACLH,KAAK,CACFe,IADH,CACQ,qDADR,EAC+DD,EAD/D,EAEGE,IAFH,CAESZ,GAAD,IAAS;AACb,QAAIA,GAAG,CAACI,IAAJ,CAASS,GAAb,EAAkB;AAChBC,MAAAA,KAAK,CAACd,GAAG,CAACI,IAAJ,CAASS,GAAV,CAAL;AACD,KAFD,MAEO;AACLd,MAAAA,QAAQ,CAACS,cAAc,CAACR,GAAG,CAACI,IAAL,CAAf,EAA2BW,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAA3B,CAAR;AACD;AACF,GARH,CADF;AAUD,CAZM;AAaP;;AACA,OAAO,MAAMC,iBAAiB,GAAIZ,OAAD,IAAa;AAC5C,SAAO;AACLD,IAAAA,IAAI,EAAEV,kBADD;AAELW,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAMa,qBAAqB,GAAIT,EAAD,IAAQ;AAC3C,SAAQX,QAAD,IACLH,KAAK,CACFwB,MADH,CACW,0DAAyDV,EAAG,EADvE,EAEGE,IAFH,CAESZ,GAAD,IACJD,QAAQ,CAACmB,iBAAiB,CAAClB,GAAG,CAACI,IAAL,CAAlB,EAA8BW,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,CAA9B,CAHZ,CADF;AAMD,CAPM;AASP;;AACA,OAAO,MAAMI,YAAY,GAAIf,OAAD,IAAa;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEX,aADD;AAELY,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAMgB,gBAAgB,GAAIZ,EAAD,IAAQ;AACtC,SAAQX,QAAD,IACLH,KAAK,CACF2B,KADH,CAEK,0DAAyDb,EAAE,CAACc,GAAI,EAFrE,EAGId,EAHJ,EAKGE,IALH,CAKSZ,GAAD,IACJD,QAAQ,CAACsB,YAAY,CAACrB,GAAG,CAACI,IAAL,CAAb,EAAyBW,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAzB,CANZ,CADF;AASD,CAVM","sourcesContent":["import {\n  GET_RESERVATION,\n  ADD_RESERVATION,\n  EDIT_DECISION,\n  DELETE_RESERVATION,\n} from \"./types\";\nimport axios from \"axios\";\n/*********************** GET Reservation********************** */\nexport const getReservation = (user) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      \"http://localhost:8000/chef-d'oeuvre/reservation/\"\n    );\n    console.log(res.data);\n    dispatch({\n      type: GET_RESERVATION,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n/*********************** ADD Reservation ********************** */\n\nexport const addReservation = (payload) => {\n  return {\n    type: ADD_RESERVATION,\n    payload,\n  };\n};\nexport const addReservationToDB = (el) => {\n  console.log(el);\n  return (dispatch) =>\n    axios\n      .post(\"http://localhost:8000/chef-d'oeuvre/reservation/add\", el)\n      .then((res) => {\n        if (res.data.msg) {\n          alert(res.data.msg);\n        } else {\n          dispatch(addReservation(res.data), window.location.reload());\n        }\n      });\n};\n/*********************** DELETE Reservation********************** */\nexport const deleteReservation = (payload) => {\n  return {\n    type: DELETE_RESERVATION,\n    payload,\n  };\n};\nexport const deleteReservationInDB = (el) => {\n  return (dispatch) =>\n    axios\n      .delete(`http://localhost:8000/chef-d'oeuvre/reservation/delete/${el}`)\n      .then((res) =>\n        dispatch(deleteReservation(res.data), window.location.reload(false))\n      );\n};\n\n/*************************** EDIT Decision ****************************/\nexport const editDecision = (payload) => {\n  return {\n    type: EDIT_DECISION,\n    payload,\n  };\n};\nexport const editDecisionInDB = (el) => {\n  return (dispatch) =>\n    axios\n      .patch(\n        `http://localhost:8000/chef-d'oeuvre/reservation/update/${el._id}`,\n        el\n      )\n      .then((res) =>\n        dispatch(editDecision(res.data), window.location.reload())\n      );\n};\n"]},"metadata":{},"sourceType":"module"}