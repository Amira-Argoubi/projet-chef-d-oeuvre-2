{"ast":null,"code":"var _jsxFileName = \"/home/amira/Bureau/copie-projet-chef-d-oeuvreV7/client/src/components/edit.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editUserInDB, getUser } from \"../actions/auth\";\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInputGroup } from \"mdbreact\";\n\nclass EditProfil extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal8: false,\n      modal9: false\n    };\n\n    this.toggle = nr => () => {\n      let modalNumber = \"modal\" + nr;\n      this.setState({\n        [modalNumber]: !this.state[modalNumber]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"info\",\n      onClick: this.toggle(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Right\"), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal8,\n      toggle: this.toggle(8),\n      fullHeight: true,\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"MDBModal title\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MDBInputGroup, {\n      valueDefault: this.props.user.nom_prenom,\n      onChange: e => this.setState({\n        nom_prenom: e.target.value\n      }),\n      material: true,\n      containerClassName: \"mb-2 mt-0\",\n      prepend: \"Nom-pr\\xE9nom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MDBInputGroup, {\n      valueDefault: this.props.user.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      material: true,\n      containerClassName: \"mb-2 mt-0\",\n      prepend: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(MDBInputGroup, {\n      material: true,\n      containerClassName: \"mb-2 mt-0\",\n      prepend: \"Mot de passe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(MDBModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Save changes\"))), /*#__PURE__*/React.createElement(MDBModal, {\n      isOpen: this.state.modal9,\n      toggle: this.toggle(9),\n      fullHeight: true,\n      position: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBModalHeader, {\n      toggle: this.toggle(9),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"MDBModal title\"), /*#__PURE__*/React.createElement(MDBModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"), /*#__PURE__*/React.createElement(MDBModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle(9),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: () => this.props.editUserInDB({\n        _id: this.props.user._id,\n        nom_prenom: this.props.user.nom_prenom ? this.props.user.nom_prenom : this.state.nom_prenom,\n        email: this.props.user.email ? this.props.user.email : this.state.email,\n        password: this.props.user.password ? this.props.user.password : this.state.password,\n        role: this.props.user.role\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Save changes\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth\n  };\n};\n\nconst dispatch = dispatch => {\n  return {\n    getUser: () => dispatch(getUser()),\n    editUser: el => dispatch(editUserInDB(el))\n  };\n};\n\nexport default connect(mapStateToProps, dispatch)(EditProfil);","map":{"version":3,"sources":["/home/amira/Bureau/copie-projet-chef-d-oeuvreV7/client/src/components/edit.js"],"names":["React","Component","connect","editUserInDB","getUser","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","MDBInputGroup","EditProfil","state","modal8","modal9","toggle","nr","modalNumber","setState","componentDidMount","props","render","user","nom_prenom","e","target","value","email","_id","password","role","mapStateToProps","auth","dispatch","editUser","el"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editUserInDB, getUser } from \"../actions/auth\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBModalFooter,\n  MDBInputGroup,\n} from \"mdbreact\";\n\nclass EditProfil extends Component {\n  state = {\n    modal8: false,\n    modal9: false,\n  };\n\n  toggle = (nr) => () => {\n    let modalNumber = \"modal\" + nr;\n    this.setState({\n      [modalNumber]: !this.state[modalNumber],\n    });\n  };\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  render() {\n    return (\n      <MDBContainer>\n        <MDBBtn color=\"info\" onClick={this.toggle(8)}>\n          Right\n        </MDBBtn>\n        <MDBModal\n          isOpen={this.state.modal8}\n          toggle={this.toggle(8)}\n          fullHeight\n          position=\"right\"\n        >\n          <MDBModalHeader toggle={this.toggle(8)}>\n            MDBModal title\n          </MDBModalHeader>\n          <MDBModalBody>\n            <MDBContainer>\n              <MDBInputGroup\n                valueDefault={this.props.user.nom_prenom}\n                onChange={(e) => this.setState({ nom_prenom: e.target.value })}\n                material\n                containerClassName=\"mb-2 mt-0\"\n                prepend=\"Nom-prénom\"\n              />\n              <MDBInputGroup\n                valueDefault={this.props.user.email}\n                onChange={(e) => this.setState({ email: e.target.value })}\n                material\n                containerClassName=\"mb-2 mt-0\"\n                prepend=\"Email\"\n              />\n              <MDBInputGroup\n                material\n                containerClassName=\"mb-2 mt-0\"\n                prepend=\"Mot de passe\"\n              />\n            </MDBContainer>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.toggle(8)}>\n              Close\n            </MDBBtn>\n            <MDBBtn color=\"primary\">Save changes</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n\n        <MDBModal\n          isOpen={this.state.modal9}\n          toggle={this.toggle(9)}\n          fullHeight\n          position=\"bottom\"\n        >\n          <MDBModalHeader toggle={this.toggle(9)}>\n            MDBModal title\n          </MDBModalHeader>\n          <MDBModalBody>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat.\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.toggle(9)}>\n              Close\n            </MDBBtn>\n            <MDBBtn\n              color=\"primary\"\n              onClick={() =>\n                this.props.editUserInDB({\n                  _id: this.props.user._id,\n                  nom_prenom: this.props.user.nom_prenom\n                    ? this.props.user.nom_prenom\n                    : this.state.nom_prenom,\n                  email: this.props.user.email\n                    ? this.props.user.email\n                    : this.state.email,\n                  password: this.props.user.password\n                    ? this.props.user.password\n                    : this.state.password,\n                  role: this.props.user.role,\n                })\n              }\n            >\n              Save changes\n            </MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth,\n  };\n};\nconst dispatch = (dispatch) => {\n  return {\n    getUser: () => dispatch(getUser()),\n    editUser: (el) => dispatch(editUserInDB(el)),\n  };\n};\nexport default connect(mapStateToProps, dispatch)(EditProfil);\n"]},"metadata":{},"sourceType":"module"}